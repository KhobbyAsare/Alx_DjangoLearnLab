"""
Django settings for LibraryProject project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-u1%72^w3pf%@=jo0st9g7)@%l_v==f(&#u5f&s0%$_%0&z!x5+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False  # Make sure this is False in production for security

ALLOWED_HOSTS = ['yourdomain.com', 'www.yourdomain.com']  # Add your production domain(s)

# Custom user model
AUTH_USER_MODEL = 'bookshelf.CustomUser'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bookshelf',
    'relationship_app',
    # 'csp',  # Uncomment if you add django-csp for Content Security Policy
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',  # Protects against CSRF attacks
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',  # Protects against clickjacking
    # 'csp.middleware.CSPMiddleware',  # Uncomment if using django-csp
]

ROOT_URLCONF = 'LibraryProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],  # Add paths to your custom template dirs if any
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'LibraryProject.wsgi.application'


# Database
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',  # Use PostgreSQL or another DB in production
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',},
]


# Internationalization
LANGUAGE_CODE = 'en-us'
TIME_ZONE = 'UTC'
USE_I18N = True
USE_TZ = True


# Static files (CSS, JavaScript, Images)
STATIC_URL = 'static/'


# Default primary key field type
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


# =========================
# SECURITY ENHANCEMENTS
# =========================

# Enable browser's XSS protection
SECURE_BROWSER_XSS_FILTER = True

# Prevent browsers from MIME-type sniffing
SECURE_CONTENT_TYPE_NOSNIFF = True

# Prevent clickjacking attacks by disallowing site to be framed
X_FRAME_OPTIONS = 'DENY'

# Secure cookies â€” ensure they're only sent over HTTPS
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_SECURE = True

# Make CSRF cookie HttpOnly to mitigate some XSS risks
CSRF_COOKIE_HTTPONLY = True

# Redirect all HTTP requests to HTTPS (ensure your server supports HTTPS)
SECURE_SSL_REDIRECT = True

# HTTP Strict Transport Security (HSTS) - tells browsers to use HTTPS only for this site
SECURE_HSTS_SECONDS = 31536000  # Adjust to your needs (e.g., 3600 seconds = 1 hour)
SECURE_HSTS_INCLUDE_SUBDOMAINS = True
SECURE_HSTS_PRELOAD = True

# Trust the X-Forwarded-Proto header to determine if the request is secure
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')

# Content Security Policy settings example if django-csp middleware is enabled
# CSP_DEFAULT_SRC = ("'self'",)
# CSP_SCRIPT_SRC = ("'self'", 'cdnjs.cloudflare.com')
# CSP_STYLE_SRC = ("'self'", 'fonts.googleapis.com')
# CSP_FONT_SRC = ("'self'", 'fonts.gstatic.com')
# CSP_IMG_SRC = ("'self'", 'data:')
